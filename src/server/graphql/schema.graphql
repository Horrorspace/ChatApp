type User {
    id: ID!
    username: String!
    email: String!
    online: Boolean
    avatarSrc: String
    confirmed: Boolean
}

input UserInput {
    username: String!
    email: String!
    password: String!
}

input EditUserName {
    id: ID!
    username: String!
}

input EditUserEmail {
    id: ID!
    email: String!
}

input EditUserPassword {
    id: ID!
    password: String!
}

input EditUserOnline {
    id: ID!
    online: Boolean
}

input EditUserAvatar {
    id: ID!
    avatarSrc: String
}

type Query {
    users: [User]
    user(id: ID!): User
}

type Mutation {
    createUser(user: UserInput): User
    editUserName(options: EditUserName): User
    editUserEmail(options: EditUserEmail): User
    editUserPassword(options: EditUserPassword): User
    editUserOnline(options: EditUserOnline): User
    editUserAvatar(options: EditUserAvatar): User
    editUserConfirm(id: ID!): User
    deleteUser(id: ID!): User
}
